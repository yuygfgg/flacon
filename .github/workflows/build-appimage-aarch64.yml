name: Build AppImage aarch64

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  LANG: en_US.UTF-8
  LS_ALL: en_US.UTF-8
  LANGUAGE: en_US:en
  PROGRAMS: alacenc faac flac lame mac oggenc opusenc sox ttaenc wavpack wvunpack

jobs:
  armv7_job:
    # The host should always be Linux
    runs-on: ubuntu-22.04
    name: Build AppImage aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu18.04

          run: |
            uname -a
            echo "░░ Set env ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░"
            echo "RELEASE_DATE=$(date +%Y.%m.%d_%H.%M.%S)" >> ${GITHUB_ENV}
            echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

            [[ "${GITHUB_REF_TYPE}"  = "tag" ]] && echo APPIMAGE_NAME="flacon-${GITHUB_REF_NAME:1}-x86_64.AppImage" >> $GITHUB_ENV
            [[ "${GITHUB_REF_TYPE}" != "tag" ]] && echo APPIMAGE_NAME="flacon-$(date +%Y.%m.%d_%H.%M.%S)-x86_64.AppImage" >> $GITHUB_ENV

            echo "==============================="
            export
            echo "-------------------------------"
            cat $GITHUB_ENV
            echo "==============================="

            echo "░░ Install packages Set env ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░"
            echo 'debconf debconf/frontend select Noninteractive' | sudo debconf-set-selections
            sudo apt-get -y update
            sudo apt-get -y install locales
            sudo sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && locale-gen
            sudo apt-get -y install build-essential pkg-config cmake  qtbase5-dev qttools5-dev-tools qttools5-dev libuchardet-dev libtag1-dev
            sudo apt-get -y install flac vorbis-tools wavpack lame faac opus-tools sox
            sudo apt-get -y install desktop-file-utils
  
            echo "░░ Build Flacon ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░"
            cmake -E make_directory ${{github.workspace}}/build
            cmake -E make_directory ${{github.workspace}}/build/app
            cmake -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build/app/usr -DAPPIMAGE_BUNDLE=Yes -DCMAKE_BUILD_TYPE=$BUILD_TYPE $GITHUB_WORKSPACE -B ${{github.workspace}}/build
            make -C ${{github.workspace}}/build -j 8
            make -C ${{github.workspace}}/build install
            


      - name: Get the output
        # Echo the `uname` output parameter from the `runcmd` step
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
